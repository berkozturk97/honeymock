{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/berk/Documents/React/honeymock/components/LoginSteps/Step2.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Flex, FormControl, Icon, Input, Text } from '@chakra-ui/react';\n\nfunction Step2() {\n  _s();\n\n  var _React$useState = React.useState([false, false]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkedItems = _React$useState2[0],\n      setCheckedItems = _React$useState2[1];\n\n  var allChecked = checkedItems.every(Boolean);\n  var isIndeterminate = checkedItems.some(Boolean) && !allChecked;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      ml: 5,\n      color: \"#979EA7\",\n      fontSize: \"3xl\",\n      children: \"Some practical questions..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      ml: 5,\n      fontWeight: \"bold\",\n      mt: 10,\n      fontSize: \"xl\",\n      children: \"What type of employment are you looking for? *\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      isChecked: allChecked,\n      isIndeterminate: isIndeterminate,\n      onChange: function onChange(e) {\n        return setCheckedItems([e.target.checked, e.target.checked]);\n      },\n      children: \"Parent Checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      pl: 6,\n      mt: 1,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        isChecked: checkedItems[0],\n        onChange: function onChange(e) {\n          return setCheckedItems([e.target.checked, checkedItems[1]]);\n        },\n        children: \"Child Checkbox 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        isChecked: checkedItems[1],\n        onChange: function onChange(e) {\n          return setCheckedItems([checkedItems[0], e.target.checked]);\n        },\n        children: \"Child Checkbox 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      bg: \"#7DB0E4\",\n      color: \"white\",\n      _hover: \"none\",\n      ml: 5,\n      mt: 5,\n      children: \"Click And Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Step2, \"OSnI2wnsSkMaM6UoIl6QAAXDwv0=\");\n\n_c = Step2;\nexport default Step2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"sources":["/Users/berk/Documents/React/honeymock/components/LoginSteps/Step2.js"],"names":["Box","Button","Flex","FormControl","Icon","Input","Text","Step2","React","useState","checkedItems","setCheckedItems","allChecked","every","Boolean","isIndeterminate","some","e","target","checked"],"mappings":";;;;;;;AAEA,SACIA,GADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,WAJJ,EAKIC,IALJ,EAMIC,KANJ,EAOIC,IAPJ,QAQS,kBART;;AASA,SAASC,KAAT,GAAiB;AAAA;;AAAA,wBAC2BC,KAAK,CAACC,QAAN,CAAe,CAAC,KAAD,EAAQ,KAAR,CAAf,CAD3B;AAAA;AAAA,MACNC,YADM;AAAA,MACQC,eADR;;AAGf,MAAMC,UAAU,GAAGF,YAAY,CAACG,KAAb,CAAmBC,OAAnB,CAAnB;AACA,MAAMC,eAAe,GAAGL,YAAY,CAACM,IAAb,CAAkBF,OAAlB,KAA8B,CAACF,UAAvD;AACE,sBACI;AAAA,4BACK,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAa,MAAA,KAAK,EAAC,SAAnB;AAA6B,MAAA,QAAQ,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAIN;AAAA;AAAA;AAAA;AAAA,YAJM,eAKN,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAa,MAAA,UAAU,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAE,EAAnC;AAAuC,MAAA,QAAQ,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALM,eASN,QAAC,QAAD;AACM,MAAA,SAAS,EAAEA,UADjB;AAEM,MAAA,eAAe,EAAEG,eAFvB;AAGM,MAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,eAAON,eAAe,CAAC,CAACM,CAAC,CAACC,MAAF,CAASC,OAAV,EAAmBF,CAAC,CAACC,MAAF,CAASC,OAA5B,CAAD,CAAtB;AAAA,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATM,eAgBF,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE,CAAX;AAAc,MAAA,EAAE,EAAE,CAAlB;AAAqB,MAAA,OAAO,EAAE,CAA9B;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,SAAS,EAAET,YAAY,CAAC,CAAD,CADzB;AAEE,QAAA,QAAQ,EAAE,kBAACO,CAAD;AAAA,iBAAON,eAAe,CAAC,CAACM,CAAC,CAACC,MAAF,CAASC,OAAV,EAAmBT,YAAY,CAAC,CAAD,CAA/B,CAAD,CAAtB;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,QAAD;AACE,QAAA,SAAS,EAAEA,YAAY,CAAC,CAAD,CADzB;AAEE,QAAA,QAAQ,EAAE,kBAACO,CAAD;AAAA,iBAAON,eAAe,CAAC,CAACD,YAAY,CAAC,CAAD,CAAb,EAAkBO,CAAC,CAACC,MAAF,CAASC,OAA3B,CAAD,CAAtB;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBE,eAgCN,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,KAAK,EAAC,OAA3B;AAAmC,MAAA,MAAM,EAAC,MAA1C;AAAiD,MAAA,EAAE,EAAE,CAArD;AAAwD,MAAA,EAAE,EAAE,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCM;AAAA,kBADJ;AAuCH;;GA5CQZ,K;;KAAAA,K;AA8CT,eAAeA,KAAf","sourcesContent":["\n\nimport {\n    Box,\n    Button,\n    Flex,\n    FormControl,\n    Icon,\n    Input,\n    Text\n  } from '@chakra-ui/react'\nfunction Step2() {\n    const [checkedItems, setCheckedItems] = React.useState([false, false])\n\n  const allChecked = checkedItems.every(Boolean)\n  const isIndeterminate = checkedItems.some(Boolean) && !allChecked\n    return(\n        <>\n             <Text ml={5} color=\"#979EA7\" fontSize=\"3xl\">\n             Some practical questions..\n  </Text>\n  <hr />\n  <Text ml={5} fontWeight=\"bold\" mt={10} fontSize=\"xl\">\n  What type of employment are you looking for? *\n  </Text>\n\n  <Checkbox\n        isChecked={allChecked}\n        isIndeterminate={isIndeterminate}\n        onChange={(e) => setCheckedItems([e.target.checked, e.target.checked])}\n      >\n        Parent Checkbox\n      </Checkbox>\n      <Stack pl={6} mt={1} spacing={1}>\n        <Checkbox\n          isChecked={checkedItems[0]}\n          onChange={(e) => setCheckedItems([e.target.checked, checkedItems[1]])}\n        >\n          Child Checkbox 1\n        </Checkbox>\n        <Checkbox\n          isChecked={checkedItems[1]}\n          onChange={(e) => setCheckedItems([checkedItems[0], e.target.checked])}\n        >\n          Child Checkbox 2\n        </Checkbox>\n      </Stack>\n\n\n  <Button bg=\"#7DB0E4\" color=\"white\" _hover=\"none\" ml={5} mt={5}>\n    Click And Save\n  </Button>\n        </>\n    )\n   \n}\n\nexport default Step2;"]},"metadata":{},"sourceType":"module"}